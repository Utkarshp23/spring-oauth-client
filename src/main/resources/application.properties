#Setting Thymeleafe--->
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.application.name=securify

#Setting github OAuth---->
#spring.security.oauth2.client.registration.github.client-id=
#spring.security.oauth2.client.registration.github.client-secret=

#Setting Google OAuth---->
#spring.security.oauth2.client.registration.google.client-id=
#spring.security.oauth2.client.registration.google.client-secret=

#Setting custom-auth-server OAuth---->
spring.security.oauth2.client.registration.testclient.client-id=R2dpxQ3vPrtfgF72
spring.security.oauth2.client.registration.testclient.client-secret=fDw7Mpkk5czHNuSRtmhGmAGL42CaxQB9
spring.security.oauth2.client.registration.testclient.client-name=testclient
spring.security.oauth2.client.registration.testclient.redirect-uri=http://localhost:8080/login/oauth2/code/testclient
spring.security.oauth2.client.registration.testclient.scope=openid,profile,email
spring.security.oauth2.client.registration.testclient.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.testclient.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.testclient.provider=testprovider

spring.security.oauth2.client.provider.testprovider.issuer-uri=http://auth-server.local:9000
spring.security.oauth2.client.provider.testprovider.authorization-uri=http://auth-server.local:9000/oauth2/authorize
spring.security.oauth2.client.provider.testprovider.token-uri=http://auth-server.local:9000/oauth2/token
spring.security.oauth2.client.provider.testprovider.user-info-uri=http://auth-server.local:9000/userinfo
spring.security.oauth2.client.provider.testprovider.user-name-attribute=name



logging.level.org.springframework.security=TRACE
